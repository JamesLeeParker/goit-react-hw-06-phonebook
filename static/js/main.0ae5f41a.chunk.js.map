{"version":3,"sources":["Phonebook/Phonebook.module.scss","redux/contactsActions.js","Phonebook/Contacts/Contacts.jsx","Filter/Filter.jsx","Form/Form.jsx","services/localStorage.js","Phonebook/Phonebook.jsx","App/App.jsx","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","setContacts","createAction","addContact","deleteContact","onFilter","Contacts","contacts","useSelector","state","items","filter","console","log","dispatch","useDispatch","btnDelete","e","elemId","target","closest","getAttribute","normalizeFilter","toLowerCase","contact","name","includes","getFilteredContact","map","id","number","type","onClick","Filter","label","onChange","value","STORAGE_KEY","Form","useState","setContact","setNumber","nanoid","useEffect","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","setItem","stringify","onSubmit","preventDefault","find","item","alert","pattern","title","required","Phonebook","delContact","onFilterChange","className","s","wrapper","App","setFilter","itemsReducer","createReducer","builder","addCase","_","action","payload","filterReducer","contactsReducer","combineReducers","logger","createLogger","collapsed","getState","logEntry","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ae5f41a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Phonebook_wrapper__1sCQq\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst setContacts = createAction(\"contacts/contacts_set\");\nconst addContact = createAction(\"contacts/contact_add\");\nconst deleteContact = createAction(\"contacts/contact_delete\");\nconst onFilter = createAction(\"contacts/filter_change\");\n\n// const setContacts = (contacts = []) => ({\n//   type: \"contacts/contacts_set\",\n//   payload: contacts,\n// });\n\n// const addContact = (contact) => ({\n//   type: \"contacts/contact_add\",\n//   payload: contact,\n// });\n\n// const deleteContact = (id) => ({\n//   type: \"contacts/contact_delete\",\n//   payload: id,\n// });\n\n// const onFilter = (text = \"\") => ({\n//   type: \"contacts/filter_change\",\n//   payload: text,\n// });\n\nexport { deleteContact, addContact, setContacts, onFilter };\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contactsActions\";\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  // const contacts = useSelector((state) => state.items);\r\n  console.log(\"✈️ ~ contacts\", filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const btnDelete = (e) => {\r\n    const elemId = e.target.closest(\"li\").getAttribute(\"id\");\r\n    return dispatch(deleteContact(elemId));\r\n  };\r\n\r\n  const getFilteredContact = () => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  };\r\n\r\n  return getFilteredContact().map(({ id, name, number }) => {\r\n    return (\r\n      <li id={id} key={id}>\r\n        <span>{name}</span>: <span>{number}</span>\r\n        <button type=\"button\" onClick={btnDelete}>\r\n          delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { onFilter } from \"../redux/contactsActions\";\r\n\r\nexport default function Filter({ label = \"\" }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const onFilterChange = (e) => {\r\n    // console.log(e.target.value);\r\n    dispatch(onFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        {label}\r\n        <input type=\"text\" onChange={onFilterChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { addContact, setContacts } from \"../redux/contactsActions\";\r\nimport * as storage from \"../services/localStorage\";\r\nimport s from \"./Forem.module.scss\";\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\n\r\nexport default function Form() {\r\n  const [name, setContact] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contact = { id: nanoid(), name, number };\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  // const contacts = useSelector((state) => state.items);\r\n\r\n  useEffect(() => {\r\n    const savedContacts = storage.get(STORAGE_KEY);\r\n    if (savedContacts) {\r\n      dispatch(setContacts(savedContacts));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    storage.save(STORAGE_KEY, contacts);\r\n  }, [contact]);\r\n\r\n  const handleInputName = (e) => setContact(e.target.value);\r\n  const handleInputNumber = (e) => setNumber(e.target.value);\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    )\r\n      return alert(\"NO!\");\r\n\r\n    dispatch(addContact(contact));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleAddContact}>\r\n      <h2>Name contact</h2>\r\n      <label>\r\n        <p>Name:</p>\r\n        <input\r\n          onChange={handleInputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <p>Phone number:</p>\r\n        <input\r\n          onChange={handleInputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Form from \"../Form/Form\";\r\nimport s from \"./Phonebook.module.scss\";\r\n\r\nconst Phonebook = ({\r\n  contacts,\r\n  delContact,\r\n  addContact,\r\n  filter,\r\n  onFilterChange,\r\n}) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <h1>Phonebook</h1>\r\n      <Form value={addContact} />\r\n      <h1>Contacts</h1>\r\n      <Filter\r\n        value={filter}\r\n        label={\"Finde contact by name:\"}\r\n        onFilterChange={onFilterChange}\r\n      />\r\n      <ul>\r\n        <Contacts contacts={contacts} delContact={delContact} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import { nanoid } from \"nanoid\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Phonebook from \"../Phonebook/Phonebook\";\r\nimport * as storage from \"../services/localStorage\";\r\n\r\nconst STORAGE_KEY = \"contacts\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   const savedContacts = storage.get(STORAGE_KEY);\r\n  //   if (savedContacts) {\r\n  //     setContacts(savedContacts);\r\n  //     // this.setState({ contacts: savedContacts });\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(\r\n  //   (contacts) => {\r\n  //     storage.save(STORAGE_KEY, contacts);\r\n  //   },\r\n  //   [contacts]\r\n  // );\r\n\r\n  // const getAddContacts = (value) => {\r\n  //   setContacts([...contacts, value]);\r\n  // };\r\n\r\n  // const inputValue = (e) => {\r\n  //   e.preventDefault();\r\n  //   const contact = {\r\n  //     id: nanoid(),\r\n  //     name: e.target[0].value,\r\n  //     number: e.target[1].value,\r\n  //   };\r\n\r\n  // e.target[0].value = \"\";\r\n  // e.target[1].value = \"\";\r\n\r\n  //   if (\r\n  //     contacts.find(\r\n  //       (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n  //     )\r\n  //   )\r\n  //     return alert(\"NO!\");\r\n  //   return getAddContacts(contact);\r\n  // };\r\n\r\n  // const deleteContact = (id) => {\r\n  //   const newArr = contacts.filter((contact) => contact.id !== id);\r\n  //   setContacts(newArr);\r\n  // };\r\n\r\n  const handleFilterChange = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const getFilteredContact = () => {\r\n    // const { contacts, filter } = this.state;\r\n\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Phonebook\r\n        contacts={getFilteredContact()}\r\n        onFilterChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  deleteContact,\n  addContact,\n  setContacts,\n  onFilter,\n} from \"./contactsActions\";\n\nconst itemsReducer = createReducer([], (builder) => {\n  builder\n    .addCase(setContacts, (_, action) => action.payload)\n    .addCase(addContact, (state, action) => [...state, action.payload])\n    .addCase(deleteContact, (state, action) =>\n      state.filter((contact) => contact.id !== action.payload)\n    );\n});\n\nconst filterReducer = createReducer(\"\", {\n  [onFilter]: (_, action) => action.payload,\n});\n\n// const itemsReducer = (state = [], action) => {\n//   switch (action.type) {\n//     case \"contacts/contacts_set\":\n//       return action.payload;\n\n//     case \"contacts/contact_add\":\n//       return [...state, action.payload];\n\n//     case \"contacts/contact_delete\":\n//       return state.filter((contact) => contact.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case \"contacts/filter_change\":\n//       return action.payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport { contactsReducer };\n// export { itemsReducer, filterReducer };\n","// import { createStore, combineReducers } from \"redux\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\n// import { itemsReducer, filterReducer } from \"./contactsReducer\";\nimport { contactsReducer } from \"./contactsReducer\";\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App/App.jsx\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}